spring.application.name=order-service
server.port=6002

spring.datasource.url=jdbc:postgresql://localhost:5002/order-service
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=taltech
spring.datasource.password=ecommerce
spring.jpa.hibernate.ddl-auto=update

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

user.service.url=http://localhost:6001/api/user/
inventory.service.url=http://localhost:6003/api/inventory/
chart.service.url=http://localhost:6004/api/chart/
payment.service.url=http://localhost:6005/api/payment/

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=inventoryTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.taltech.ecommerce.orderservice.event.InventoryEvent
